// SPDX-License-Identifier: MIT
pragma solidity ^0.8.17;

contract ErrorHandlingExample {
    uint256 public value;

    event ValueSet(uint256 newValue);
    event ValueGot(uint256 value);

    function setValueWithRequire(uint256 new_value) external {
        require(new_value > 0, "Value must greater then 0");
        value = new_value;
        emit ValueSet(value);
    }

    
    function getValueWithAssert() external returns (uint256) {
    assert(value != 0);
    emit ValueGot(value);
    return value;
    }

    function setValueWithRevert(uint256 new_value2) external {
        
        if (new_value2 > 39) {
            revert("Value cannot exceed 100");
        }
        value = new_value2;
        emit ValueSet(value);
    }
}

